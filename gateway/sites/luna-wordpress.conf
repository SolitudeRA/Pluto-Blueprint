server {
    listen 80;
    listen [::]:80;

    server_name www.protogalaxy.me;

    return 301 https://protogalaxy.me$request_uri;
}

server {
    listen 80;
    listen [::]:80;

    server_name protogalaxy.me;

    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name protogalaxy.me www.protogalaxy.me;

    ssl_certificate /opt/bitnami/nginx/conf/certs/cert.pem;
    ssl_certificate_key /opt/bitnami/nginx/conf/certs/cert.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    ssl_dhparam /opt/bitnami/nginx/conf/certs/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    ssl_client_certificate /opt/bitnami/nginx/conf/authenticated_origin_pull_ca.pem;
    ssl_verify_client on;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /opt/bitnami/nginx/conf/certs/origin_ca_rsa_root.pem;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://10.0.72.2:9072;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;

        proxy_pass http://10.0.72.2:9072;
    }

    location = /robots.txt {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-NginX-Proxy true;

        allow all;
        log_not_found off;
        access_log off;

        proxy_pass http://10.0.72.2:9072;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://10.0.72.2:9072;
        proxy_redirect off;

        expires max;
        log_not_found off;
    }
}


